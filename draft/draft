Widget _buildImageColumn() {
  return Container(
    decoration: const BoxDecoration(
      color: Colors.black26,
    ),
    child: Column(
      children: [
        _buildImageRow(1),
        _buildImageRow(3),
      ],
    ),
  );
}

const descTextStyle = TextStyle(
  color: Colors.black,
  fontWeight: FontWeight.w800,
  fontFamily: 'Roboto',
  letterSpacing: 0.5,
  fontSize: 18,
  height: 2,
);

final stars = Row(
  mainAxisSize: MainAxisSize.min,
  children: [
    Icon(Icons.star, color: Colors.green[500]),
    Icon(Icons.star, color: Colors.green[500]),
    Icon(Icons.star, color: Colors.green[500]),
    const Icon(Icons.star, color: Colors.black),
    const Icon(Icons.star, color: Colors.black),
  ],
);

final ratings = Container(
  padding: const EdgeInsets.all(20),
  child: Row(
    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
    children: [
      stars,
      const Text(
        '170 Reviews',
        style: TextStyle(
          color: Colors.black,
          fontWeight: FontWeight.w800,
          fontFamily: 'Roboto',
          letterSpacing: 0.5,
          fontSize: 20,
        ),
      ),
    ],
  ),
);


Widget _buildDecoratedImage(int imageIndex) => Expanded(
      child: Container(
        decoration: BoxDecoration(
          border: Border.all(width: 10, color: Colors.black38),
          borderRadius: const BorderRadius.all(Radius.circular(8)),
        ),
        margin: const EdgeInsets.all(4),
        child: Image.asset('images/pic$imageIndex.jpg'),
      ),
    );

Widget _buildImageRow(int imageIndex) => Row(
      children: [
        _buildDecoratedImage(imageIndex),
        _buildDecoratedImage(imageIndex + 1),
      ],
    );

    Widget _buildGrid() => GridView.extent(
        maxCrossAxisExtent: 150,
        padding: const EdgeInsets.all(4),
        mainAxisSpacing: 4,
        crossAxisSpacing: 4,
        children: _buildGridTileList(30));

    // The images are saved with names pic0.jpg, pic1.jpg...pic29.jpg.
    // The List.generate() constructor allows an easy way to create
    // a list when objects have a predictable naming pattern.

    List<Container> _buildGridTileList(int count) => List.generate(
        count, (i) => Container(child: Image.asset('images/pic$i.jpg')));


        Widget _buildList() {
          return ListView(
            children: [
              _tile('CineArts at the Empire', '85 W Portal Ave', Icons.theaters),
              _tile('The Castro Theater', '429 Castro St', Icons.theaters),
              _tile('Alamo Drafthouse Cinema', '2550 Mission St', Icons.theaters),
              _tile('Roxie Theater', '3117 16th St', Icons.theaters),
              _tile('United Artists Stonestown Twin', '501 Buckingham Way',
                  Icons.theaters),
              _tile('AMC Metreon 16', '135 4th St #3000', Icons.theaters),
              const Divider(),
              _tile('K\'s Kitchen', '757 Monterey Blvd', Icons.restaurant),
              _tile('Emmy\'s Restaurant', '1923 Ocean Ave', Icons.restaurant),
              _tile('Chaiya Thai Restaurant', '272 Claremont Blvd', Icons.restaurant),
              _tile('La Ciccia', '291 30th St', Icons.restaurant),
            ],
          );
        }

        ListTile _tile(String title, String subtitle, IconData icon) {
          return ListTile(
            title: Text(title,
                style: const TextStyle(
                  fontWeight: FontWeight.w500,
                  fontSize: 20,
                )),
            subtitle: Text(subtitle),
            leading: Icon(
              icon,
              color: Colors.blue[500],
            ),
          );
        }


        CircleAvatar(
          backgroundImage: NetworkImage(userAvatarUrl),
        )


        ConstrainedBox(
          constraints: const BoxConstraints(
            minWidth: 70,
            minHeight: 70,
            maxWidth: 150,
            maxHeight: 150,
          ),
          child: Container(color: red, width: 10, height: 10),
        )

        Widget _buildStack() {
          return Stack(
            alignment: const Alignment(0.6, 0.6),
            children: [
              const CircleAvatar(
                backgroundImage: AssetImage('images/pic.jpg'),
                radius: 100,
              ),
              Container(
                decoration: const BoxDecoration(
                  color: Colors.black45,
                ),
                child: const Text(
                  'Mia B',
                  style: TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                    color: Colors.white,
                  ),
                ),
              ),
            ],
          );
        }